<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	
	<!-- 프로젝트 전반적인 설정을 하는 곳 -->
	<!-- 객체를 설정하는 공간 -->
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
	<!--DataSource DB 연결 설정 -->
<!-- 	<bean id="dataSource" 
		  class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" 
				  value="com.mysql.cj.jdbc.Driver"/>
		<property name="url" 
				  value="jdbc:mysql://localhost:3306/springdb?serverTimezone=Asia/Seoul&amp;useSSL=false"/>
		<property name="username" value="root"/>
		<property name="password" value="1234"/>
	</bean> -->
	
	<!-- hikariCP 설정 정보(DB연결정보) -->
	<bean id="hikariConfig"
		  class="com.zaxxer.hikari.HikariConfig">
		  <property name="driverClassName"
		  			value="com.mysql.cj.jdbc.Driver"/>
		  <property name="jdbcUrl"
		  			value="jdbc:mysql://localhost:3306/springdb?serverTimezone=Asia/Seoul&amp;useSSL=false"/>
		  <property name="username" value="root"></property>
		  <property name="password" value="1234"></property>
	</bean>
	<!-- hikariCP 설정 정보(DB연결정보) -->

	<!-- hikariCP 사용 디비 연결 DataSource -->
	<bean id="dataSource"
		  class="com.zaxxer.hikari.HikariDataSource" 
		  destroy-method="close"
		  >
		  <constructor-arg ref="hikariConfig"/>
	</bean>
	<!-- hikariCP 사용 디비 연결 DataSource -->
	
	<!-- sqlSessionFactory 객체 - 디비연결,처리,sql 실행, mybaits 설정 -->
	<bean id="sqlSessionFactory"
		  class="org.mybatis.spring.SqlSessionFactoryBean">
		  <property name="dataSource" ref="dataSource"/>		  
		  <property name="configLocation" 
		  			value="classpath:/mybatis-config.xml"/>
		  <property name="mapperLocations" 
		  			value="classpath:mappers/**/*Mapper.xml"/>
	</bean>

	<!-- sqlSessionFactory 객체 - 디비연결,처리,sql 실행 -->
	
	<!-- SqlSessionTemplate 객체 - 디비 연결(자동처리), MyBatis 설정, sql 실행, 자원해제, 트랜젝션관리, 쓰레드 안정성 관리  -->
		<bean id="sqlSession"
			  class="org.mybatis.spring.SqlSessionTemplate" 
			  destroy-method="clearCache">
			<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
		</bean>
	
	<!-- SqlSessionTemplate 객체 - 디비 연결(자동처리), MyBatis 설정, sql 실행, 자원해제, 트랜젝션관리, 쓰레드 안정성 관리  -->
	
	<!-- com.itwillbs.persistence 패키지 정보를 스캔(객체가 있는지 체크) -->
	<!-- 이미 만들어져 있는 객체를 불러와서 사용 할 수 있다. -->
	<context:component-scan base-package="com.itwillbs.persistence"/>
	
	
</beans>
